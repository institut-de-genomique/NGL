
#Common
GET		/api/commons/states							controllers.commons.api.States.list()
GET		/api/commons/states-hierarchy				controllers.commons.api.StatesHierarchy.list()
GET		/api/commons/states/:code					controllers.commons.api.States.get(code: java.lang.String)
GET		/api/commons/users							controllers.commons.api.Users.list()
GET		/api/commons/roles							controllers.commons.api.Roles.list()
PUT		/api/commons/users							controllers.commons.api.Users.update(code)

GET		/api/commons/types							controllers.commons.api.CommonInfoTypes.list()

#value of property definition
GET		/api/values									controllers.commons.api.Values.list()


#list
GET		/api/resolutions  							controllers.resolutions.api.Resolutions.list()

#instruments
GET		/api/instruments							controllers.instruments.api.Instruments.list()
GET		/api/instruments/:code						controllers.instruments.api.Instruments.get(code: java.lang.String)
PUT		/api/instruments/:code						controllers.instruments.api.Instruments.update(code: java.lang.String)

#parameters
GET		/api/parameters								controllers.commons.api.Parameters.list()
GET		/api/parameters/:typeCode/:code				controllers.commons.api.Parameters.get(typeCode: java.lang.String, code: java.lang.String)

#stats api
GET		/api/stats/configs							controllers.stats.api.StatsConfigurations.list()
GET		/api/stats/configs/:code					controllers.stats.api.StatsConfigurations.get(code)
POST	/api/stats/configs							controllers.stats.api.StatsConfigurations.save()
PUT		/api/stats/configs/:code					controllers.stats.api.StatsConfigurations.update(code)
DELETE	/api/stats/configs/:code					controllers.stats.api.StatsConfigurations.delete(code: java.lang.String)



#reporting configuration
GET    	/api/reporting/configs    	           			controllers.reporting.api.ReportingConfigurations.list()
GET	   	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.get(code)
POST 	/api/reporting/configs							controllers.reporting.api.ReportingConfigurations.save()
PUT    	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.update(code)
DELETE	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.delete(code: java.lang.String)

GET    	/api/reporting/filters    	           			controllers.reporting.api.FilteringConfigurations.list()
GET	   	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.get(code)
POST 	/api/reporting/filters							controllers.reporting.api.FilteringConfigurations.save()
PUT    	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.update(code)
DELETE	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.delete(code: java.lang.String)


#valuation configuration
GET    	/api/valuation/criterias    	        		controllers.valuation.api.ValuationCriterias.list()
GET	   	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.get(code)
POST 	/api/valuation/criterias						controllers.valuation.api.ValuationCriterias.save()
PUT    	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.update(code)
DELETE	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.delete(code: java.lang.String)

GET		/api/property-definitions						controllers.commons.api.PropertyDefinitions.list()


HEAD 	/api/keys/:code									controllers.keyDescriptions.api.KeyDescriptions.head(code)
GET 	/api/keys										controllers.keyDescriptions.api.KeyDescriptions.list()
GET 	/api/keys/:code									controllers.keyDescriptions.api.KeyDescriptions.get(code)
POST 	/api/keys										controllers.keyDescriptions.api.KeyDescriptions.save()
PUT    	/api/keys/:code									controllers.keyDescriptions.api.KeyDescriptions.update(code)
GET 	/api/keys/:code/init							controllers.keyDescriptions.api.KeyDescriptions.init(code)
GET 	/api/keys/:code/renew							controllers.keyDescriptions.api.KeyDescriptions.renew(code)
DELETE 	/api/keys/:code									controllers.keyDescriptions.api.KeyDescriptions.delete(code)
GET		/api/smrtlink									controllers.keyDescriptions.api.KeyDescriptions.testCallSMRTLinkStatus()
GET		/api/smrtlink/:code									controllers.keyDescriptions.api.KeyDescriptions.testCallSMRTLinkRunDesign(code)
GET		/api/smrtlinkImport									controllers.keyDescriptions.api.KeyDescriptions.testCallSMRTLinkImport()

