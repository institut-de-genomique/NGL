#Common
GET		/api/commons/states												controllers.commons.api.States.list()
GET		/api/commons/types												controllers.commons.api.CommonInfoTypes.list()
GET		/api/commons/users  											controllers.commons.api.Users.list()

#value of property definition
GET		/api/values														controllers.commons.api.Values.list()


GET		/api/resolutions		  										controllers.resolutions.api.Resolutions.list()


#Parameter
GET		/api/parameters									controllers.commons.api.Parameters.list()
GET     /api/parameters/:typeCode/:code 				controllers.commons.api.Parameters.get(typeCode:java.lang.String,code:java.lang.String)
POST    /api/parameters						            controllers.commons.api.Parameters.save()

#reporting
GET    	/api/reporting/filters    	           			controllers.reporting.api.FilteringConfigurations.list()
GET	   	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.get(code)
POST 	/api/reporting/filters							controllers.reporting.api.FilteringConfigurations.save()
PUT    	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.update(code)
DELETE	/api/reporting/filters/:code					controllers.reporting.api.FilteringConfigurations.delete(code: java.lang.String)

#reporting configuration
GET    	/api/reporting/configs    	           			controllers.reporting.api.ReportingConfigurations.list()
GET	   	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.get(code)
POST 	/api/reporting/configs							controllers.reporting.api.ReportingConfigurations.save()
PUT    	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.update(code)
DELETE	/api/reporting/configs/:code					controllers.reporting.api.ReportingConfigurations.delete(code: java.lang.String)

#reception configuration
GET    	/api/reception/configs    	           			controllers.receptions.api.ReceptionConfigurations.list()
GET	   	/api/reception/configs/:code					controllers.receptions.api.ReceptionConfigurations.get(code)
POST 	/api/reception/configs							controllers.receptions.api.ReceptionConfigurations.save()
PUT    	/api/reception/configs/:code					controllers.receptions.api.ReceptionConfigurations.update(code)
DELETE	/api/reception/configs/:code					controllers.receptions.api.ReceptionConfigurations.delete(code: java.lang.String)
POST	/api/reception/configs/:code/file/import		controllers.receptions.io.Receptions.importFile(code:java.lang.String)


#instruments
GET		/api/instruments								controllers.instruments.api.Instruments.list()
GET		/api/instruments/:code							controllers.instruments.api.Instruments.get(code: java.lang.String)
PUT		/api/instruments/:code							controllers.instruments.api.Instruments.update(code: java.lang.String)

#instruments type
GET		/api/instrument-categories  					controllers.instruments.api.InstrumentCategories.list()
GET 	/api/instrument-types/:code 					controllers.instruments.api.InstrumentUsedTypes.get(code:java.lang.String)
GET		/api/instrument-types  							controllers.instruments.api.InstrumentUsedTypes.list()

#valuation configuration
GET    	/api/valuation/criterias    	        		controllers.valuation.api.ValuationCriterias.list()
GET	   	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.get(code)
POST 	/api/valuation/criterias						controllers.valuation.api.ValuationCriterias.save()
PUT    	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.update(code)
DELETE	/api/valuation/criterias/:code					controllers.valuation.api.ValuationCriterias.delete(code: java.lang.String)


GET		/api/property-definitions						controllers.commons.api.PropertyDefinitions.list()
