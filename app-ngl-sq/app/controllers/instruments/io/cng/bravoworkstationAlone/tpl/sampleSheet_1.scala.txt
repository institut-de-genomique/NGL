@(experiment:models.laboratory.experiment.instance.Experiment)

@import controllers.instruments.io.utils._;

@***** FDS:  declaration de variables avec le mot cle 'var' et toutes sur une seule ligne *******@
@import java.lang.String; var source_code="";  var source_well_line=""; var source_well_col="";  var dest_well_line=""; var dest_well_col="";
@import java.math.BigInteger; var toto=0; 
@import java.lang.Double; var volume=0.0;
@import java.lang.Double; var volume2=0.0

SourceBC,SourceWell,DestinationWell,Volume\u000D\u000A
@for((atm, index) <- experiment.atomicTransfertMethods.sortWith(OutputHelper.sortBylocationSupportOneToOne).zipWithIndex){

	@{source_code=atm.inputContainerUseds.get(0).locationOnContainerSupport.code}
	
	@{source_well_line=atm.inputContainerUseds.get(0).locationOnContainerSupport.line}
	@{source_well_col=atm.inputContainerUseds.get(0).locationOnContainerSupport.column}
	
	@{dest_well_line=atm.outputContainerUseds.get(0).locationOnContainerSupport.line}
	@{dest_well_col=atm.outputContainerUseds.get(0).locationOnContainerSupport.column}
	
	@*** 09/11/2017 convertir en double pour test numÃ©rique...***@
	@{volume=Double.parseDouble(OutputHelper.getExperimentProperty(atm.inputContainerUseds.get(0), "inputVolume").toString()) }
	@*** 09/11/2017 forcer le volume a 30***@
	@if( (volume > 30) || ( volume <= 0.0) ) { @{volume=30.0}  }
	
	@(source_code),@(source_well_line)@(source_well_col),@(dest_well_line)@(dest_well_col),@(volume)\u000D\u000A
}