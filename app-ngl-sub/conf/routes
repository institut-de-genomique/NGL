-> / nglcommon.Routes
-> / apinglcommon.Routes
-> / apinglbi.Routes

# Home page
GET		/											    controllers.main.tpl.Main.home()


#GET    /sra/scripts/noRest/:clazz/:method				fr.cea.ig.lfw.controllers.scripts.ScriptController.noRest(clazz : java.lang.String, method : java.lang.String)
GET		/sra/scripts/run/:clazz							fr.cea.ig.lfw.controllers.scripts.ScriptController.run(clazz : java.lang.String)

#------------
# Submission
#------------
GET		/sra/submissions/:homeCode/home					controllers.sra.submissions.tpl.Submissions.home(homeCode : java.lang.String)
GET		/sra/submissions/:code							controllers.sra.submissions.tpl.Submissions.get(code : java.lang.String)
GET		/tpl/sra/submissions/activate					controllers.sra.submissions.tpl.Submissions.activate()
GET		/tpl/sra/submissions/consultation				controllers.sra.submissions.tpl.Submissions.consultation()
GET		/tpl/sra/submissions/create						controllers.sra.submissions.tpl.Submissions.create()
GET		/tpl/sra/submissions/details					controllers.sra.submissions.tpl.Submissions.details()
GET		/tpl/sra/submissions/validation				    controllers.sra.submissions.tpl.Submissions.validation()
GET		/tpl/sra/submissions/js-routes					controllers.sra.submissions.tpl.Submissions.javascriptRoutes()
#PUT	/api/sra/submissions/:submissionCode/activate	controllers.sra.submissions.api.Submissions.activate(submissionCode : java.lang.String)
PUT		/api/sra/submissions/createFromStudyRelease/:studyCode  controllers.sra.submissions.api.Submissions.createFromStudyRelease(studyCode : java.lang.String)
PUT		/api/sra/submissions/createForUpdate/           controllers.sra.submissions.api.Submissions.createForUpdate()
PUT		/api/sra/submissions/createFromUmbrella         controllers.sra.submissions.api.Submissions.createFromUmbrella()





#PUT	/api/sra/submissions/createFromStudyAndActivate/:studyCode controllers.sra.submissions.api.Submissions.createFromStudyAndActivate(studyCode : java.lang.String)
#GET	/api/sra/submissions/create              		controllers.sra.submissions.api.Submissions.create()

# Mise à jour d'un objet submission et de ses composants :
PUT		/api/sra/submissions/:code 							controllers.sra.submissions.api.Submissions.update(code: java.lang.String) 
# todo verifier s'il faut prefixer de api pour updateState
PUT		/api/sra/submissions/:code/state				controllers.sra.submissions.api.Submissions.updateState(code:java.lang.String)
POST	/api/sra/submissions                            controllers.sra.submissions.api.Submissions.save()
GET		/api/sra/submissions							controllers.sra.submissions.api.Submissions.list()
GET		/api/sra/submissions/:code						controllers.sra.submissions.api.Submissions.get(code: java.lang.String)

# url retirées pour etre REST :
# Creation des fichiers xml pour l'objet submission :
#PUT	/api/sra/submissions/:code/xml						controllers.sra.submissions.api.Submissions.createXml(code: java.lang.String)
# Traitement des AC et mise a jour du status de l'objet submission :
#PUT	/api/sra/submissions/:code/ebiAc					controllers.sra.submissions.api.Submissions.treatmentAc(code: java.lang.String) 
#PUT	/api/sra/submissions/:code/release					controllers.sra.submissions.api.Submissions.treatmentRelease(code: java.lang.String) 


#-----------------
#Submission comment
#-----------------
POST	/api/sra/submissions/:code/comments					    controllers.sra.submissions.api.SubmissionComments.save(code:java.lang.String)
PUT		/api/sra/submissions/:code/comments/:commentCode	    controllers.sra.submissions.api.SubmissionComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/submissions/:code/comments/:commentCode		controllers.sra.submissions.api.SubmissionComments.delete(code:java.lang.String, commentCode:java.lang.String)

#-----------------
# Configurations
#-----------------

GET		/sra/configurations/:homeCode/home			controllers.sra.configurations.tpl.Configurations.home(homeCode: java.lang.String)
GET		/sra/configurations/:code			     	controllers.sra.configurations.tpl.Configurations.get(code: java.lang.String)
GET		/tpl/sra/configurations/create				controllers.sra.configurations.tpl.Configurations.create()
GET		/tpl/sra/configurations/js-routes			controllers.sra.configurations.tpl.Configurations.javascriptRoutes()
# version avec details inutilisee
#GET	/tpl/sra/configurations/details				controllers.sra.configurations.tpl.Configurations.details()

GET 	/api/sra/configurations					    controllers.sra.configurations.api.Configurations.list()
GET		/tpl/sra/configurations/consultation		controllers.sra.configurations.tpl.Configurations.consultation()


GET		/api/sra/variables			           		controllers.sra.api.Variables.list()
#modif sgas
#GET	/api/sra/variables/:type			        controllers.sra.api.Variables.list()

GET		/api/sra/variables/:type/:code         		controllers.sra.api.Variables.get(type: java.lang.String, code: java.lang.String)

###http://localhost:9000/api/sra/configurations/CONF_BCZ_098K3YVFH
# methode get du controlleur api qui est heritée d'un parent de DocumentController
GET		/api/sra/configurations/:code				controllers.sra.configurations.api.Configurations.get(code: java.lang.String)

# Mise à jour d'un objet configuration et de ses composants :
PUT		/api/sra/configurations/:code 				controllers.sra.configurations.api.Configurations.update(code: java.lang.String) 
POST	/api/sra/configurations					    controllers.sra.configurations.api.Configurations.save()


#-----------------
# Analyzes
#-----------------
GET		/sra/analyzes/:homeCode/home			controllers.sra.analyzes.tpl.Analyzes.home(homeCode: java.lang.String)
GET		/api/sra/analyzes/rawDatas				controllers.sra.analyzes.api.AnalyzesRawDatas.list()
GET		/sra/analyzes/:code			     		controllers.sra.analyzes.tpl.Analyzes.get(code: java.lang.String)
GET		/tpl/sra/analyzes/create				controllers.sra.analyzes.tpl.Analyzes.create()
GET		/tpl/sra/analyzes/consultation			controllers.sra.analyzes.tpl.Analyzes.consultation()
GET		/tpl/sra/analyzes/details				controllers.sra.analyzes.tpl.Analyzes.details()

#GET		/tpl/sra/analyzes/update			    controllers.sra.analyzes.tpl.Analyzes.update()
GET		/api/sra/analyzes/:code				    controllers.sra.analyzes.api.Analyzes.get(code: java.lang.String)
GET		/api/sra/analyzes						controllers.sra.analyzes.api.Analyzes.list()
### attention route suivante avec rawDatas ne peut pas etre mis apres /api/sra/anlyzes/:code car sinon conflit et rawDatas et pris pour un code d'analyse
###GET		/api/sra/analyzes/rawDatas			controllers.sra.analyzes.api.AnalyzesRawDatas.list()
GET		/tpl/sra/analyzes/js-routes				controllers.sra.analyzes.tpl.Analyzes.javascriptRoutes()

PUT		/api/sra/analyzes/:code 				controllers.sra.analyzes.api.Analyzes.update(code: java.lang.String) 
POST	/api/sra/analyzes					    controllers.sra.analyzes.api.Analyzes.save()

#-------------------
# AnalyzesRawData
#-------------------
#http://localhost:9000/api/sra/analyzes/ANALYSIS_72FE46AAD/rawDatas/CHE_AH_NLRS_1_ENFK-VL6L-PRPG-TNWU_A.bnx.gz

PUT		/api/sra/analyzes/:code/rawDatas/:relatifName	controllers.sra.analyzes.api.AnalyzesRawDatas.update(code: java.lang.String, relatifName: java.lang.String)
GET		/api/sra/analyzes/:code/rawDatas/:relatifName	controllers.sra.analyzes.api.AnalyzesRawDatas.get(code: java.lang.String, relatifName: java.lang.String)


#-----------------
#Analysis comment
#-----------------
POST	/api/sra/analyzes/:code/comments					controllers.sra.analyzes.api.AnalysisComments.save(code:java.lang.String)
PUT		/api/sra/analyzes/:code/comments/:commentCode	    controllers.sra.analyzes.api.AnalysisComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/analyzes/:code/comments/:commentCode		controllers.sra.analyzes.api.AnalysisComments.delete(code:java.lang.String, commentCode:java.lang.String)

 
#----------
# Studies
#----------
GET		/sra/studies/:homeCode/home					controllers.sra.studies.tpl.Studies.home(homeCode: java.lang.String)
#http://localhost:9000/api/sra/studies?
#http://localhost:9000/api/sra/studies?datatable=true&paginationMode=local&projCode=BCZ
GET		/api/sra/studies							controllers.sra.studies.api.Studies.list()
POST	/api/sra/studies							controllers.sra.studies.api.Studies.save()
GET		/tpl/sra/studies/create					    controllers.sra.studies.tpl.Studies.create()
GET		/tpl/sra/studies/update					    controllers.sra.studies.tpl.Studies.update()
###release fait dans menu details mais si on fait un menu release dedié alors prevoir url:
#GET	/tpl/sra/studies/release				    controllers.sra.studies.tpl.Studies.release()
GET		/tpl/sra/studies/js-routes				   	controllers.sra.studies.tpl.Studies.javascriptRoutes()
GET		/tpl/sra/studies/details				    controllers.sra.studies.tpl.Studies.details()

GET		/api/sra/studies/:code			        	controllers.sra.studies.api.Studies.get(code: java.lang.String)
GET		/sra/studies/:code			            	controllers.sra.studies.tpl.Studies.get(code: java.lang.String)

GET		/tpl/sra/studies/consultation	        	controllers.sra.studies.tpl.Studies.consultation()
# Mise à jour d'un objet study et de ses composants :
PUT		/api/sra/studies/:code 						controllers.sra.studies.api.Studies.update(code: java.lang.String) 
PUT		/api/sra/studies/internal/:code				controllers.sra.studies.api.StudiesInternal.update(code: java.lang.String)
POST	/api/sra/studies					    	controllers.sra.studies.api.Studies.save()
#PUT	/api/sra/studies/:studyCode/release	        controllers.sra.studies.api.Studies.release(studyCode : java.lang.String)
#PUT	/api/sra/studies/:code/state				controllers.sra.studies.api.Studies.updateState(code:java.lang.String)


#-----------------
#Study comment
#-----------------
POST	/api/sra/studies/:code/comments					    controllers.sra.studies.api.StudyComments.save(code:java.lang.String)
PUT		/api/sra/studies/:code/comments/:commentCode	    controllers.sra.studies.api.StudyComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/studies/:code/comments/:commentCode		controllers.sra.studies.api.StudyComments.delete(code:java.lang.String, commentCode:java.lang.String)

#-------------
# Projects
#-------------
GET		/sra/projects/:homeCode/home			controllers.sra.projects.tpl.Projects.home(homeCode: java.lang.String)
GET		/sra/projects/:code						controllers.sra.projects.tpl.Projects.get(code: java.lang.String)
GET		/api/sra/projects						controllers.sra.projects.api.Projects.list()
GET		/api/sra/projects/:code					controllers.sra.projects.api.Projects.get(code: java.lang.String)
PUT		/api/sra/projects/:code					controllers.sra.projects.api.Projects.update(code: java.lang.String)
GET		/tpl/sra/projects/js-routes				controllers.sra.projects.tpl.Projects.javascriptRoutes()
GET		/tpl/sra/projects/consultation	        controllers.sra.projects.tpl.Projects.consultation()
GET		/tpl/sra/projects/update				controllers.sra.projects.tpl.Projects.update()
###PUT	/api/sra/projects/:code 				controllers.sra.projects.api.Projects.update(code: java.lang.String) 
POST	/api/sra/projects					    controllers.sra.projects.api.Projects.save()
GET		/tpl/sra/projects/create			    controllers.sra.projects.tpl.Projects.create()
GET		/tpl/sra/projects/details				controllers.sra.projects.tpl.Projects.details()


#####GET		/tpl/sra/umbrellas/consultation	        controllers.sra.projects.tpl.Projects.consultationUmbrella()

#-----------------
#Project comment
#-----------------
POST	/api/sra/projects/:code/comments					controllers.sra.projects.api.ProjectComments.save(code:java.lang.String)
PUT		/api/sra/projects/:code/comments/:commentCode	    controllers.sra.projects.api.ProjectComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/projects/:code/comments/:commentCode		controllers.sra.projects.api.ProjectComments.delete(code:java.lang.String, commentCode:java.lang.String)


#--------
# Samples
#--------
GET		/sra/samples/:homeCode/home					controllers.sra.samples.tpl.Samples.home(homeCode: java.lang.String)
GET		/api/sra/samples							controllers.sra.samples.api.Samples.list()
POST	/api/sra/samples					    	controllers.sra.samples.api.Samples.save()
GET		/tpl/sra/samples/create				        controllers.sra.samples.tpl.Samples.create()
GET		/tpl/sra/samples/update					    controllers.sra.samples.tpl.Samples.update()
GET		/tpl/sra/samples/js-routes				   	controllers.sra.samples.tpl.Samples.javascriptRoutes()
GET		/tpl/sra/samples/details				    controllers.sra.samples.tpl.Samples.details()
GET		/api/sra/samples/:code						controllers.sra.samples.api.Samples.get(code: java.lang.String)
GET		/sra/samples/:code							controllers.sra.samples.tpl.Samples.get(code: java.lang.String)
GET		/tpl/sra/samples/consultation	        	controllers.sra.samples.tpl.Samples.consultation()
PUT		/api/sra/samples/:code						controllers.sra.samples.api.Samples.update(code: java.lang.String)
#PUT	/api/sra/samples/internal/:code				controllers.sra.samples.api.SamplesInternal.update(code: java.lang.String)
POST	/api/sra/samples/userFile		  			controllers.sra.samples.api.Samples.loadUserFileSample()



#http://localhost:9000/api/sra/samples?codeRegex=sample_BCM_4932_OS_564&datatable=true&paginationMode=local ok
#http://localhost:9000/api/sra/samples?projCodes=BRI&=true&atatable=true&paginationMode=local ok 
#http://localhost:9000/api/sra/samples?accessionRegex=ERS1082367&datatable=true&paginationMode=local ok 

#http://localhost:9000/api/sra/studies?projCodes=ARC&datatable=true&paginationMode=local ok
#http://localhost:9000/api/sra/samples?projCodes=AXY&datatable=true&paginationMode=local  ok
#http://localhost:9000/api/sra/experiments?pseudoStateCodes=pseudo_ebiKnown&datatable=true&paginationMode=local
#http://localhost:9000/api/sra/experiments/exp_BYQ_AAACOSDA_4_C9GL9ACXX.12BA217/rawDatas/BYQ_AAACOSDA_4_1_C9GL9ACXX.12BA217_clean.fastq.gz
#http://localhost:9000/api/sra/experiments/rawDatas?code=exp_BYQ_AAACOSDA_4_C9GL9ACXX.12BA217
#http://localhost:9000/api/sra/experiments/rawDatas?runCode=run_BYQ_AAACOSDA_4_C9GL9ACXX.12BA217
#http://localhost:9000/api/sra/experiments/rawDatas?submissionCode=CNS_BYQ_AWF_24RF4HJFI
#http://localhost:9000/api/sra/analyzes?code=ANALYSIS_72FE46AAD 
#http://localhost:9000/api/sra/analyzes/ANALYSIS_72FE46AAD/rawDatas/CHE_AH_NLRS_1_ENFK-VL6L-PRPG-TNWU_A.bnx.gz ok
#http://localhost:9000/api/sra/analyzes/rawDatas?submissionCode=GSC_CHE_72FE47FSC ok
#http://localhost:9000/api/sra/analyzes/rawDatas?code=ANALYSIS_72FE46AAD ok
#http://localhost:9000/api/sra/experiments?projCodes=BIL&stateCodes=SUB-N&stateCodes=SUB-F ok 
#http://localhost:9000/api/sra/analyzes?projCodes=BIL&stateCodes=SUB-N&stateCodes=SUB-F bug => ne semble pas tenir compte du state.

#####PUT		/api/sra/samples/:code 							controllers.sra.samples.api.Samples.update(code: java.lang.String) 



#-----------------
#Sample comment
#-----------------
POST	/api/sra/samples/:code/comments					    controllers.sra.samples.api.SampleComments.save(code:java.lang.String)
PUT		/api/sra/samples/:code/comments/:commentCode	    controllers.sra.samples.api.SampleComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/samples/:code/comments/:commentCode		controllers.sra.samples.api.SampleComments.delete(code:java.lang.String, commentCode:java.lang.String)

#-------------
# Experiments
#-------------
GET		/sra/experiments/:homeCode/home				controllers.sra.experiments.tpl.Experiments.home(homeCode: java.lang.String)
GET		/sra/experiments/:code						controllers.sra.experiments.tpl.Experiments.get(code: java.lang.String)
GET		/api/sra/experiments						controllers.sra.experiments.api.Experiments.list()
GET		/api/sra/experiments/rawDatas				controllers.sra.experiments.api.ExperimentsRawDatas.list()
GET		/api/sra/experiments/readSpecs				controllers.sra.experiments.api.ExperimentsReadSpecs.list()
GET		/api/sra/experiments/:code					controllers.sra.experiments.api.Experiments.get(code: java.lang.String)
GET 	/api/sra/experiments/run/:code				controllers.sra.experiments.api.ExperimentsRuns.get(code: java.lang.String)
PUT		/api/sra/experiments/run/:code				controllers.sra.experiments.api.ExperimentsRuns.update(code: java.lang.String)
GET		/tpl/sra/experiments/js-routes				controllers.sra.experiments.tpl.Experiments.javascriptRoutes()
GET		/tpl/sra/experiments/consultation	        controllers.sra.experiments.tpl.Experiments.consultation()
GET		/tpl/sra/experiments/details			    controllers.sra.experiments.tpl.Experiments.details()
GET		/tpl/sra/experiments/update					controllers.sra.experiments.tpl.Experiments.update()
PUT		/api/sra/experiments/:code					controllers.sra.experiments.api.Experiments.update(code: java.lang.String)
POST	/api/sra/experiments					    controllers.sra.experiments.api.Experiments.save()
###PUT	/api/sra/experiments/:code 					controllers.sra.experiments.api.Experiments.update(code: java.lang.String) 
#POST	/api/sra/experiments/userFile				controllers.sra.experiments.api.Experiments.loadUserFileExperiment()
#POST	/api/sra/experiments/userFileExtended		controllers.sra.experiments.api.Experiments.loadUserFileExperimentExtended()
#### Attention bien mettre userFile et userFileExtended car si on met pour les 2 post userFile, meme si les 2 noms de methodes sont differents,
## on va sur la premiere methode definie dans le cas d'un reverse routing
# meilleure solution 
POST	/api/sra/experiments/typeParser				controllers.sra.experiments.api.Experiments.loadUserFileExperiment(typeParser: java.lang.String)


#-----------------
#Experiment comment
#-----------------
POST	/api/sra/experiments/:code/comments					    controllers.sra.experiments.api.ExperimentComments.save(code:java.lang.String)
PUT		/api/sra/experiments/:code/comments/:commentCode	    controllers.sra.experiments.api.ExperimentComments.update(code:java.lang.String, commentCode:java.lang.String)
DELETE	/api/sra/experiments/:code/comments/:commentCode		controllers.sra.experiments.api.ExperimentComments.delete(code:java.lang.String, commentCode:java.lang.String)

#-------------------
# ExperimentsRawData
#-------------------

PUT		/api/sra/experiments/:code/rawDatas/:relatifName	controllers.sra.experiments.api.ExperimentsRawDatas.update(code: java.lang.String, relatifName: java.lang.String)
GET		/api/sra/experiments/:code/rawDatas/:relatifName	controllers.sra.experiments.api.ExperimentsRawDatas.get(code: java.lang.String, relatifName: java.lang.String)
DELETE	/api/sra/experiments/:code/rawDatas/:relatifName	controllers.sra.experiments.api.ExperimentsRawDatas.delete(code: java.lang.String, relatifName: java.lang.String)

#-----------------
# ExperimentsRuns
#-----------------


#--------
#GET    	/api/readsets	                 		controllers.readsets.api.ReadSets.list()

#---------
# projects from ngl-common
#---------
GET		/api/projects								controllers.projects.api.Projects.list()

# states from ngl-Common
GET		/api/commons/states							controllers.commons.api.States.list()

#----------------
# documentation
#----------------
GET		/sra/documentation/home						controllers.sra.documentation.tpl.Documentation.home()

#-------------
# Bilans
#-------------
GET		/sra/bilans/:homeCode/home				controllers.sra.bilans.tpl.Bilans.home(homeCode: java.lang.String)
#GET	/sra/bilans/:code						controllers.sra.bilans.tpl.Bilans.get(code: java.lang.String)
GET		/tpl/sra/bilans/js-routes				controllers.sra.bilans.tpl.Bilans.javascriptRoutes()
GET		/tpl/sra/bilans/consultation	        controllers.sra.bilans.tpl.Bilans.consultation()




# Map static resources from the /public folder to the /assets URL path
# GET   /assets/*file               									controllers.Assets.at(path="/public", file)
GET     /messages.js                									controllers.main.tpl.Main.jsMessages()
GET     /codes.js        	        									controllers.main.tpl.Main.jsCodes()
