// copy CNG 06/04/2017
package rules

rule "Create Run and ReadSets Nanopore"
	@nglSQ( workflow )
	dialect "java"
	salience 1000
	no-loop
	when 
	$experiment:Experiment($state:state.code,$typeCode:typeCode,$typeCode=="nanopore-depot",$state=="F",$instrumentUsed:instrument)
	$atomicTransfert: OneToOneContainer($outputContainerUseds: outputContainerUseds, $outputContainerUseds!=null )
	$outputContainerUsed: OutputContainerUsed() from $outputContainerUseds
	then
		Logger.debug("Nanopore-depot update state code : "+$state);
		//Creation run
		Run run=new Run();
		Date runStartDate = (Date)$experiment.experimentProperties.get("runStartDate").value;
		run.sequencingStartDate=runStartDate;
		run.state=new State("N","ngl-sq");
	
		run.containerSupportCode=$outputContainerUsed.code;
   		//run.projectCodes = $experiment.projectCodes; //done with readset creation
    	//run.sampleCodes = $experiment.sampleCodes; //done with readset creation
   		run.traceInformation=new TraceInformation();
   		run.traceInformation.setTraceInformation("ngl-sq");
   		
   		run.instrumentUsed=new InstrumentUsed();
   		run.instrumentUsed.typeCode=$experiment.instrument.typeCode;
   		run.instrumentUsed.code=$experiment.instrument.code;
    	
    	run.code=((new SimpleDateFormat("yyMMdd")).format(runStartDate))+"_"+run.instrumentUsed.code+"_"+run.containerSupportCode;
		
		Treatment treatment=new Treatment();
		treatment.code="minknowBasecalling";
		treatment.typeCode="minknow-basecalling";
		treatment.categoryCode="sequencing";
		treatment.results.put("default",new HashMap<String, PropertyValue>(0));
		run.treatments.put("minknowBasecalling",treatment);
		
		//Add properties
		if($instrumentUsed.typeCode.equals("promethION")  || $instrumentUsed.typeCode.equals("gridION")){
			run.properties.put("flowcellChemistry",$outputContainerUsed.instrumentProperties.get("flowcellChemistry"));
		}else{
			run.properties.put("flowcellChemistry",$experiment.instrumentProperties.get("flowcellChemistry"));
		}
		
		Run runInDb = MongoDBDAO.findOne(InstanceConstants.RUN_ILLUMINA_COLL_NAME, Run.class, DBQuery.is("code", run.code));

 		if (runInDb == null) { // Si le run n'existe pas déjà, on continue. Sinon, on s'arrête.
			insert(run);			
		} else {
			Logger.error("Run with code '" + run.code + "' already exists with state '" + runInDb.state.code + "', aborting rule 'Create Run and ReadSets Nanopore'.");
		}
end


rule "Update type Run RMINION"
	@nglSQ( workflow )
	dialect "java"
	salience 900
	no-loop
	when 
		$run:Run(typeCode==null,$instrumentTypeCode:instrumentUsed.typeCode,$instrumentTypeCode=="minION")
	then
		 Logger.debug("typeCode RMINION");
		$run.typeCode="RMINION";	
		$run.categoryCode="nanopore";
		update($run);
end


rule "Update type Run RMKI"
	@nglSQ( workflow )
	dialect "java"
	salience 900
	no-loop
	when 
	$run:Run(typeCode==null,$instrumentTypeCode:instrumentUsed.typeCode,$instrumentTypeCode=="mk1")
	then
		Logger.debug("typeCode RMKI");
		$run.typeCode="RMKI";	
		$run.categoryCode="nanopore";
		update($run);
end


rule "Update type Run RMKIB"
	@nglSQ( workflow )
	dialect "java"
	salience 900
	no-loop
	when 
	$run:Run(typeCode==null,$instrumentTypeCode:instrumentUsed.typeCode,$instrumentTypeCode=="mk1b")
	then
		Logger.debug("typeCode RMKIB");
		$run.typeCode="RMKIB";	
		$run.categoryCode="nanopore";
		update($run);
end

rule "Update type Run PROMETHION"
	@nglSQ( workflow )
	dialect "java"
	salience 900
	no-loop
	when 
	$run:Run(typeCode==null,$instrumentTypeCode:instrumentUsed.typeCode,$instrumentTypeCode=="promethION")
	then
		Logger.debug("typeCode RPROMETHION");
		$run.typeCode="RPROMETHION";	
		$run.categoryCode="nanopore";
		update($run);
end

rule "Update type Run GRIDION"
	@nglSQ( workflow )
	dialect "java"
	salience 900
	no-loop
	when 
	$run:Run(typeCode==null,$instrumentTypeCode:instrumentUsed.typeCode,$instrumentTypeCode=="gridION")
	then
		Logger.debug("typeCode RGRIDION");
		$run.typeCode="RGRIDION";	
		$run.categoryCode="nanopore";
		update($run);
end

rule "Save Run Nanopore"
	@nglSQ( workflow )
	dialect "java"
	salience 800
	no-loop
	when 
		$run:Run(categoryCode=="nanopore")	
    	$contextError:ContextValidation()
	then
		Logger.debug("Save run nanopore");
		$contextError.setCreationMode();
		$run = (Run)InstanceHelpers.save(InstanceConstants.RUN_ILLUMINA_COLL_NAME,$run,$contextError,true);
		update($run);			
end

//NGL-2314 : Desactivation regle creation ReadSet Nanopore. Creation dans BI lorsque Run est a séquencage terminée
//rule "Create ReadSet"
//@nglSQ( workflow )
//	dialect "java"
//	salience 700
//	no-loop
//	when  
//		$experiment:Experiment($atomic:atomicTransfertMethods,$state:state.code,$typeCode:typeCode,$typeCode=="nanopore-depot",$state=="F")
//		AtomicTransfertMethod($inputContainerUseds :inputContainerUseds,$laneNumber:line) from $atomic
//		InputContainerUsed($code:code,$contents:contents) from $inputContainerUseds
//		$content:Content() from $contents 
//		$run:Run(categoryCode=="nanopore")
//		$contextError:ContextValidation()
//	then
//		Logger.debug("ReadSet Creation for run "+$run.code);
		//Creation des readsets
//		Date runStartDate = (Date)$experiment.experimentProperties.get("runStartDate").value;
 		 
//		ReadSet readSet=new ReadSet();
//		readSet.typeCode="rsnanopore";
		
//		String shortProjectCode = $content.projectCode.charAt(0)+$content.projectCode.split("_",2)[1];
		
//		readSet.code=shortProjectCode+"_ONT_"+$content.sampleCode+"_"+$laneNumber+"_"+$run.containerSupportCode;
//		if($content.properties.containsKey("tag")){
//			readSet.code=readSet.code+"."+$content.properties.get("tag").value;
//		}
		
		
//		readSet.state=new State("N","ngsrg");
//		readSet.submissionState = new State("NONE", "ngsrg");
		
//		readSet.runCode=$run.code;
//		readSet.runTypeCode=$run.typeCode;
//		readSet.runSequencingStartDate=runStartDate;
//		readSet.laneNumber=1;
//		readSet.sampleCode=$content.sampleCode;
//		readSet.projectCode=$content.projectCode;
		//TO DO
//		readSet.path="A_RENSEIGNER";
//     	readSet.location="CNG";	
//		readSet.traceInformation=new TraceInformation();
//		readSet.traceInformation.setTraceInformation("ngsrg");
//	    $contextError.setCreationMode();
//	    InstanceHelpers.save(InstanceConstants.READSET_ILLUMINA_COLL_NAME,readSet,$contextError,true);
//	    MongoDBDAO.update(InstanceConstants.RUN_ILLUMINA_COLL_NAME, Run.class
//				,DBQuery.is("code",$run.code)
//				,DBUpdate.addToSet("sampleCodes", $content.sampleCode).addToSet("projectCodes",$content.projectCode));
	    
//end

//!!!!! NEED TO CALL IN LAST BECAUSE THE Workflows.setRunState() call DROOLS AND INACTIVE OTHER RULES EXECUTION!!!!!!
rule "Update Workflow Run Nanopore"
	@nglSQ( workflow )
	dialect "java"
	salience 600
	no-loop
	when 
		$run:Run(categoryCode=="nanopore")	
    	$contextError:ContextValidation()
	then
		Logger.debug("Update Workflow run nanopore");
		State nextState = new State();
		nextState.code = "IP-S";
		nextState.date = new Date();
		nextState.user = "ngl-sq";
		RunWorkflows workflows = IGGlobals.injector().instanceOf(RunWorkflows.class);
		workflows.setState($contextError, $run, nextState);
		//Workflows.setRunState($contextError, $run, nextState);				
end
